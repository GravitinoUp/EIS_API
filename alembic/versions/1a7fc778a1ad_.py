"""empty message

Revision ID: 1a7fc778a1ad
Revises: 
Create Date: 2024-07-15 17:06:30.121746

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1a7fc778a1ad'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plan_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('way',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['plan_status.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('plan_event',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('plan_uuid', sa.UUID(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plan_uuid'], ['plan.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('plan_position',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('plan_uuid', sa.UUID(), nullable=False),
    sa.Column('purchase_name', sa.String(length=50), nullable=False),
    sa.Column('purchase_price', sa.Double(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('kosgu', sa.String(length=50), nullable=False),
    sa.Column('purchase_offer_number', sa.Integer(), nullable=False),
    sa.Column('object_name', sa.String(length=50), nullable=False),
    sa.Column('result_name', sa.String(length=50), nullable=False),
    sa.Column('npa_date', sa.DateTime(), nullable=False),
    sa.Column('npa_number', sa.Integer(), nullable=False),
    sa.Column('current_year_plan_count', sa.Integer(), nullable=False),
    sa.Column('current_year_avg_price', sa.Double(), nullable=False),
    sa.Column('first_year_plan_count', sa.Integer(), nullable=False),
    sa.Column('first_year_avg_price', sa.Double(), nullable=False),
    sa.Column('second_year_plan_count', sa.Integer(), nullable=False),
    sa.Column('second_year_avg_price', sa.Double(), nullable=False),
    sa.Column('next_years_plan_count', sa.Integer(), nullable=False),
    sa.Column('next_years_avg_price', sa.Double(), nullable=False),
    sa.Column('start_max_price', sa.Double(), nullable=False),
    sa.Column('total_limit', sa.Integer(), nullable=False),
    sa.Column('current_year_limit', sa.Integer(), nullable=False),
    sa.Column('first_year_limit', sa.Integer(), nullable=False),
    sa.Column('second_year_limit', sa.Integer(), nullable=False),
    sa.Column('next_years_limit', sa.Integer(), nullable=False),
    sa.Column('public_purchase_description', sa.String(), nullable=False),
    sa.Column('auth_institution', sa.String(), nullable=False),
    sa.Column('organizer_name', sa.String(), nullable=False),
    sa.Column('placement_month', sa.Integer(), nullable=False),
    sa.Column('way_id', sa.Integer(), nullable=False),
    sa.Column('small_business', sa.String(), nullable=False),
    sa.Column('initiator', sa.String(), nullable=False),
    sa.Column('price_value', sa.Double(), nullable=False),
    sa.Column('savings', sa.Double(), nullable=False),
    sa.Column('contract_number', sa.Integer(), nullable=False),
    sa.Column('contarct_date', sa.DateTime(), nullable=False),
    sa.Column('contragent', sa.String(), nullable=False),
    sa.Column('approval_letter', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['plan_uuid'], ['plan.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['way_id'], ['way.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('plan_position')
    op.drop_table('plan_event')
    op.drop_table('user')
    op.drop_table('plan')
    op.drop_table('way')
    op.drop_table('role')
    op.drop_table('plan_status')
    # ### end Alembic commands ###
