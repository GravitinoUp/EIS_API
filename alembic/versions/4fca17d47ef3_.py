"""empty message

Revision ID: 4fca17d47ef3
Revises: 
Create Date: 2024-07-16 15:41:46.277286

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4fca17d47ef3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branch',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name')
    )
    op.create_table('currency',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('document_type',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('okei',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('okpd',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('data', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('organization_type',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('plan_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('purchase_step',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('purchase_type',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('way',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('branch_uuid', sa.UUID(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_uuid'], ['branch.uuid'], ),
    sa.ForeignKeyConstraint(['status_id'], ['plan_status.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('product',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Double(), nullable=False),
    sa.Column('okei_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['okei_id'], ['okei.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('organization',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('organization_type_uuid', sa.UUID(), nullable=False),
    sa.Column('contact_person_uuid', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=False),
    sa.Column('short_name', sa.String(length=20), nullable=False),
    sa.Column('register_number', sa.Integer(), nullable=False),
    sa.Column('bic', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('mail_address', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('fax', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('orgn', sa.String(), nullable=False),
    sa.Column('inn', sa.Integer(), nullable=False),
    sa.Column('kpp', sa.Integer(), nullable=False),
    sa.Column('okpo', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('additional_info', sa.String(), nullable=False),
    sa.Column('web_site', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['contact_person_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['organization_type_uuid'], ['organization_type.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('bic'),
    sa.UniqueConstraint('register_number')
    )
    op.create_table('purchase_product',
    sa.Column('purchase_uuid', sa.UUID(), nullable=False),
    sa.Column('product_uuid', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_uuid'], ['product.uuid'], ),
    sa.PrimaryKeyConstraint('purchase_uuid', 'product_uuid')
    )
    op.create_table('purchase',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('plan_uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('kosgu_uuid', sa.UUID(), nullable=True),
    sa.Column('purchase_offer_number', sa.Integer(), nullable=True),
    sa.Column('okpd_uuid', sa.UUID(), nullable=True),
    sa.Column('object_name', sa.String(), nullable=True),
    sa.Column('okei_id', sa.Integer(), nullable=True),
    sa.Column('result_name', sa.String(), nullable=True),
    sa.Column('npa_date', sa.DateTime(), nullable=True),
    sa.Column('npa_number', sa.String(), nullable=True),
    sa.Column('start_max_price', sa.Double(), nullable=True),
    sa.Column('limit_uuid', sa.UUID(), nullable=True),
    sa.Column('purchase_public_discussion', sa.String(), nullable=True),
    sa.Column('authorized_instution', sa.String(), nullable=True),
    sa.Column('organizer_name', sa.String(), nullable=True),
    sa.Column('placement_month', sa.Integer(), nullable=True),
    sa.Column('way_id', sa.Integer(), nullable=True),
    sa.Column('small_buisness', sa.String(), nullable=True),
    sa.Column('price_value', sa.Double(), nullable=True),
    sa.Column('savings', sa.Double(), nullable=True),
    sa.Column('contract_number', sa.String(), nullable=True),
    sa.Column('contract_date', sa.DateTime(), nullable=True),
    sa.Column('contragent', sa.String(), nullable=True),
    sa.Column('approval_letter', sa.String(), nullable=True),
    sa.Column('purchase_type_uuid', sa.UUID(), nullable=False),
    sa.Column('initiator_uuid', sa.UUID(), nullable=False),
    sa.Column('executor_uuid', sa.UUID(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=True),
    sa.Column('contract_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_application_date', sa.DateTime(), nullable=False),
    sa.Column('executor_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('end_price', sa.Double(), nullable=True),
    sa.Column('currency_code', sa.String(), nullable=False),
    sa.Column('purchase_step_uuid', sa.UUID(), nullable=False),
    sa.Column('delivery_address', sa.String(), nullable=False),
    sa.Column('is_organization_fund', sa.Boolean(), nullable=True),
    sa.Column('application_enforcement', sa.String(), nullable=True),
    sa.Column('is_unilateral_refusion', sa.Boolean(), nullable=True),
    sa.Column('contract_enforcement', sa.String(), nullable=True),
    sa.Column('quality_gurantee_period', sa.Integer(), nullable=True),
    sa.Column('manufacturer_guarantee', sa.Integer(), nullable=True),
    sa.Column('warranty_obligations_enforcement', sa.String(), nullable=True),
    sa.Column('additionl_info', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['currency_code'], ['currency.code'], ),
    sa.ForeignKeyConstraint(['executor_uuid'], ['organization.uuid'], ),
    sa.ForeignKeyConstraint(['initiator_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['okei_id'], ['okei.id'], ),
    sa.ForeignKeyConstraint(['okpd_uuid'], ['okpd.uuid'], ),
    sa.ForeignKeyConstraint(['plan_uuid'], ['plan.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_step_uuid'], ['purchase_step.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_type_uuid'], ['purchase_type.uuid'], ),
    sa.ForeignKeyConstraint(['way_id'], ['way.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('document',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('document_type_uuid', sa.UUID(), nullable=False),
    sa.Column('purchase_uuid', sa.UUID(), nullable=False),
    sa.Column('executor_uuid', sa.UUID(), nullable=False),
    sa.Column('customer_uuid', sa.UUID(), nullable=False),
    sa.Column('person_executor_uuid', sa.UUID(), nullable=False),
    sa.Column('person_customer_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['customer_uuid'], ['organization.uuid'], ),
    sa.ForeignKeyConstraint(['document_type_uuid'], ['document_type.uuid'], ),
    sa.ForeignKeyConstraint(['executor_uuid'], ['organization.uuid'], ),
    sa.ForeignKeyConstraint(['person_customer_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['person_executor_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['purchase_uuid'], ['purchase.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('plan_value',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('purchase_uuid', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('avg_price', sa.Double(), nullable=False),
    sa.ForeignKeyConstraint(['purchase_uuid'], ['purchase.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('purchase_event',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('purchase_uuid', sa.UUID(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['purchase_uuid'], ['purchase.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('technical_task',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('purchase_uuid', sa.UUID(), nullable=False),
    sa.Column('data_json', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['purchase_uuid'], ['purchase.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('technical_task')
    op.drop_table('purchase_event')
    op.drop_table('plan_value')
    op.drop_table('document')
    op.drop_table('purchase')
    op.drop_table('purchase_product')
    op.drop_table('organization')
    op.drop_table('user')
    op.drop_table('product')
    op.drop_table('plan')
    op.drop_table('way')
    op.drop_table('role')
    op.drop_table('purchase_type')
    op.drop_table('purchase_step')
    op.drop_table('plan_status')
    op.drop_table('organization_type')
    op.drop_table('okpd')
    op.drop_table('okei')
    op.drop_table('document_type')
    op.drop_table('currency')
    op.drop_table('branch')
    # ### end Alembic commands ###
